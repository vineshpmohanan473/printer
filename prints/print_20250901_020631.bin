000000 3.333600 2.290800 6.674400 6.000000 6.674400 6.674400 3.333600 4.260000 8.004000 3.996000 2.666400 6.674400 3.333600 6.674400 3.996000 3.333600 8.666400 6.674400 6.674400 6.000000 6.674400 4.260000 3.333600 7.008000 3.333600 6.000000 6.674400 6.674400 6.000000 6.674400 6.000000 3.333600 6.000000 3.333600 6.674400 3.333600 6.000000 3.333600 3.996000 2.666400 6.674400 6.674400 6.000000 3.333600 6.674400 6.000000 6.674400 6.674400 6.674400 3.333600 6.000000 6.674400 6.674400 6.000000 6.674400 6.674400 3.996000 6.674400 3.333600 2.666400 6.674400 6.674400 0.000000 ] xS
Q
q
72 452.0499 201.53149 19.56616 rc
0.97830802 0 0 -0.97830802 76.891541 468.68109 cm
/F1.1[ 12 0 0 -12 0 0]sf
0 11 m
(!"#$%&4#.\(%+'%1"/60.$/!2'\(./0*\(Q"!\);)[ 6.000000 6.674400 6.674400 6.674400 3.333600 9.996000 6.000000 6.674400 2.666400 3.996000 3.333600 3.996000 6.674400 3.333600 3.333600 6.674400 6.674400 6.000000 3.333600 2.666400 6.674400 6.674400 6.000000 3.333600 6.674400 3.996000 2.666400 6.674400 3.333600 6.674400 3.339600 3.333600 6.674400 6.000000 6.674400 0.000000 ] xS
Q
q
72 438.35361 247.5119 19.56616 rc
0.97830802 0 0 -0.97830802 76.891541 454.9848 cm
/F1.1[ 12 0 0 -12 0 0]sf
0 11 m
(!"#$%5/%+!%1"/60.$/!2'\(./0*\(Q"!\);%6$/7,!26Q=2)[ 6.000000 6.674400 6.674400 6.674400 3.333600 2.666400 6.674400 3.333600 3.996000 6.000000 3.333600 3.333600 6.674400 6.674400 6.000000 3.333600 2.666400 6.674400 6.674400 6.000000 3.333600 6.674400 3.996000 2.666400 6.674400 3.333600 6.674400 3.339600 3.333600 6.674400 6.000000 6.674400 6.674400 3.333600 6.000000 6.674400 6.674400 6.000000 6.674400 6.000000 3.333600 6.000000 3.333600 6.674400 0.000000 ] xS
Q
q
72 427.59219 221.0976 16.631241 rc
0.97830802 0 0 -0.97830802 76.891541 441.28851 cm
/F1.1[ 12 0 0 -12 0 0]sf
0 11 m
(!"#$%!9%+6%:*69$%1*IN;;;;Q"!\)%?%FCU:)[ 6.000000 6.674400 6.674400 6.674400 3.333600 6.000000 6.674400 3.333600 3.996000 6.000000 3.333600 2.290800 6.674400 6.000000 6.674400 6.674400 3.333600 3.333600 6.674400 6.674400 6.674400 6.674400 6.674400 6.674400 6.674400 3.333600 6.674400 6.000000 6.674400 3.333600 7.008000 3.333600 8.666400 8.666400 8.666400 0.000000 ] xS
ep
end
%%Trailer
%%Pages: 1
%%BoundingBox: 0 0 595 842
%%EOF
%!PS-Adobe-3.0
%APL_DSC_Encoding: UTF8
%APLProducer: (Version 15.5 (Build 24F74) Quartz PS Context)
%%Title: (Untitled)
%%Creator: (TextEdit: cgpdftops CUPS filter)
%%CreationDate: (Monday, September 01 2025 02:06:28 IST)
%%For: (vineshp)
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%PageOrder: Ascend
%RBINumCopies: 1
%%Pages: (atend)
%%BoundingBox: (atend)
%%EndComments
userdict/dscInfo 5 dict dup begin
/Title(Untitled)def
/Creator(TextEdit: cgpdftops CUPS filter)def
/CreationDate(Monday, September 01 2025 02:06:28 IST)def
/For(vineshp)def
/Pages 1 def
end put
%%BeginProlog
%%BeginFile: lw8_errorhandler-2.0
/currentpacking where 
	{ pop /oldpack currentpacking def /setpacking where
		{
			pop false setpacking
		}if
	}if
/$brkpage 64 dict def $brkpage begin
/prnt
 {dup type/stringtype ne{=string cvs}if dup length 6 mul/tx exch def/ty 10 def
  currentpoint/toy exch def/tox exch def 1 setgray newpath
  tox toy 2 sub moveto 0 ty rlineto tx 0 rlineto 0 ty neg rlineto
  closepath fill tox toy moveto 0 setgray show}bind def
/nl{currentpoint exch pop lmargin exch moveto 0 -10 rmoveto}def
/=={/cp 0 def typeprint nl}def
/typeprint{dup type exec}readonly def
/lmargin 72 def
/rmargin 72 def
/tprint
   {dup length cp add rmargin gt{nl/cp 0 def}if
    dup length cp add/cp exch def prnt}readonly def
/cvsprint{=string cvs tprint( )tprint}readonly def
/integertype{cvsprint}readonly def
/realtype{cvsprint}readonly def
/booleantype{cvsprint}readonly def
/operatortype{(--)tprint =string cvs tprint(-- )tprint}readonly def
/marktype{pop(-mark- )tprint}readonly def
/dicttype{pop(-dictionary- )tprint}readonly def
/nulltype{pop(-null- )tprint}readonly def
/filetype{pop(-filestream- )tprint}readonly def
/savetype{pop(-savelevel- )tprint}readonly def
/fonttype{pop(-fontid- )tprint}readonly def
/nametype{dup xcheck not{(/)tprint}if cvsprint}readonly def
/stringtype
 {dup rcheck{(\()tprint tprint(\))tprint}{pop(-string- )tprint}ifelse
 }readonly def
/arraytype
 {dup rcheck{dup xcheck
  {({)tprint{typeprint}forall(})tprint}
  {([)tprint{typeprint}forall(])tprint}ifelse}{pop(-array- )tprint}ifelse
 }readonly def
/packedarraytype
 {dup rcheck{dup xcheck
  {({)tprint{typeprint}forall(})tprint}
  {([)tprint{typeprint}forall(])tprint}ifelse}{pop(-packedarray- )tprint}ifelse
 }readonly def
/courier/Courier findfont 10 scalefont def
end %$brkpage
errordict/handleerror
 {systemdict begin $error begin $brkpage begin newerror
   {/newerror false store 
    vmstatus pop pop 0 ne{grestoreall}if initgraphics courier setfont
    lmargin 720 moveto(ERROR: )prnt errorname prnt
    nl(OFFENDING COMMAND: )prnt/command load prnt
 	$error/ostack known{
	$error/ostack get type dup/arraytype eq exch /packedarraytype eq or
   {nl nl(STACK:)prnt nl nl $error/ostack get aload length{==}repeat}if}if
    systemdict/showpage get exec(%%[ Error: )print
    errorname =print(; OffendingCommand: )print/command 
    load =print( ]%%)= flush}if end end end}
dup 0 systemdict put dup 4 $brkpage put bind readonly put
/currentpacking where 
	{ pop  /setpacking where
		{
			pop oldpack setpacking
		}if
	}if
%%EndFile
%%BeginFile: cg-pdf.ps
%%Copyright: Copyright 2000-2004 Apple Computer Incorporated.
%%Copyright: All Rights Reserved.
currentpacking true setpacking
/cg_md 141 dict def
cg_md begin
/L3? languagelevel 3 ge def
/bd{bind def}bind def
/ld{load def}bd
/xs{exch store}bd
/xd{exch def}bd
/cmmtx matrix def
mark
/sc/setcolor
/scs/setcolorspace
/dr/defineresource
/fr/findresource
/T/true
/F/false
/d/setdash
/w/setlinewidth
/J/setlinecap
/j/setlinejoin
/M/setmiterlimit
/i/setflat
/rc/rectclip
/rf/rectfill
/rs/rectstroke
/f/fill
/f*/eofill
/sf/selectfont
/s/show
%/as/ashow
/xS/xshow
/yS/yshow
/xyS/xyshow
/S/stroke
/m/moveto
/l/lineto
/c/curveto
/h/closepath
/n/newpath
/q/gsave
/Q/grestore
counttomark 2 idiv
%dup (number of ld's = )print == flush	% *** how many 
{ld}repeat pop
/SC{	% CSname
    /ColorSpace fr scs
}bd
/sopr /setoverprint where{pop/setoverprint}{/pop}ifelse ld
/soprm /setoverprintmode where{pop/setoverprintmode}{/pop}ifelse ld
/cgmtx matrix def
/sdmtx{cgmtx currentmatrix pop}bd
/CM {cgmtx setmatrix}bd		% pop the ctm: our gstate ctm on host is now identity
/cm {cmmtx astore CM concat}bd	% reset the matrix and then concat
/W{clip newpath}bd
/W*{eoclip newpath}bd

statusdict begin product end dup (HP) anchorsearch{
    pop pop pop	% pop off the search results
    true
}{
    pop	% previous search result
   (hp) anchorsearch{
	pop pop true
    }{
	pop false
    }ifelse
}ifelse

{	% HP is the product: we use this method of stroking because of a bug in their clone printers with certain T3 fonts
    { 
	{ % charCode Wx Wy
	    pop pop % charCode
	    (0)dup 0 4 -1 roll put
	    F charpath
	}cshow
    }
}{
    {F charpath}
}ifelse
/cply exch bd
/cps {cply stroke}bd
/pgsave 0 def
/bp{/pgsave save store}bd
/ep{pgsave restore showpage}def		% dont' bind
/re{4 2 roll m 1 index 0 rlineto 0 exch rlineto neg 0 rlineto h}bd

/scrdict 10 dict def
/scrmtx matrix def
/patarray 0 def
/createpat{patarray 3 1 roll put}bd
/makepat{
scrmtx astore pop
gsave
initgraphics
CM 
patarray exch get
scrmtx
makepattern
grestore
setpattern
}bd

/cg_BeginEPSF{
    userdict save/cg_b4_Inc_state exch put
    userdict/cg_endepsf/cg_EndEPSF load put
    count userdict/cg_op_count 3 -1 roll put 
    countdictstack dup array dictstack userdict/cg_dict_array 3 -1 roll put
    3 sub{end}repeat
    /showpage {} def
    0 setgray 0 setlinecap 1 setlinewidth 0 setlinejoin
    10 setmiterlimit [] 0 setdash newpath
    false setstrokeadjust false setoverprint	% don't use F
}bd
/cg_EndEPSF{
  countdictstack 3 sub { end } repeat
  cg_dict_array 3 1 index length 3 sub getinterval
  {begin}forall
  count userdict/cg_op_count get sub{pop}repeat
  userdict/cg_b4_Inc_state get restore
  F setpacking
}bd

/cg_biproc{currentfile/RunLengthDecode filter}bd
/cg_aiproc{currentfile/ASCII85Decode filter/RunLengthDecode filter}bd
/ImageDataSource 0 def
L3?{
    /cg_mibiproc{pop pop/ImageDataSource{cg_biproc}def}bd
    /cg_miaiproc{pop pop/ImageDataSource{cg_aiproc}def}bd
}{
    /ImageBandMask 0 def
    /ImageBandData 0 def
    /cg_mibiproc{
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/RunLengthDecode filter dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
    /cg_miaiproc{	
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/ASCII85Decode filter/RunLengthDecode filter
	    dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
}ifelse
/imsave 0 def
/BI{save/imsave xd mark}bd
/EI{imsave restore}bd
/ID{
counttomark 2 idiv
dup 2 add	% leave room for imagetype and imagematrix
dict begin
{def} repeat
pop		% remove mark
/ImageType 1 def
/ImageMatrix[Width 0 0 Height neg 0 Height]def
currentdict dup/ImageMask known{ImageMask}{F}ifelse exch
% currentdict on stack
L3?{
    dup/MaskedImage known
    { 
	pop
	<<
	    /ImageType 3
	    /InterleaveType 2
	    /DataDict currentdict
	    /MaskDict
	    <<  /ImageType 1
		/Width Width
		/Height Height
		/ImageMatrix ImageMatrix
		/BitsPerComponent 1
		/Decode [0 1]
		currentdict/Interpolate known
		{/Interpolate Interpolate}if
	    >>
	>>
    }if
}if
exch
{imagemask}{image}ifelse	
end	% pop imagedict from dict stack
}bd

/cguidfix{statusdict begin mark version end
{cvr}stopped{cleartomark 0}{exch pop}ifelse
2012 lt{dup findfont dup length dict begin
{1 index/FID ne 2 index/UniqueID ne and
{def} {pop pop} ifelse}forall
currentdict end definefont pop
}{pop}ifelse
}bd
/t_array 0 def
/t_i 0 def
/t_c 1 string def
/x_proc{ % x y
    exch t_array t_i get add exch moveto
    /t_i t_i 1 add store
}bd
/y_proc{ % x y
    t_array t_i get add moveto
    /t_i t_i 1 add store
}bd
/xy_proc{
        % x y
	t_array t_i 2 copy 1 add get 3 1 roll get 
	4 -1 roll add 3 1 roll add moveto
	/t_i t_i 2 add store
}bd
/sop 0 def		% don't bind sop
/cp_proc/x_proc ld 	% default moveto proc is for xwidths only
/base_charpath		% string array
{
    /t_array xs
    /t_i 0 def
    { % char
	t_c 0 3 -1 roll put
        currentpoint
	t_c cply sop
        cp_proc
    }forall
    /t_array 0 def
}bd
/sop/stroke ld		% default sop is stroke. Done here so we don't bind in /base_charpath 

% default sop is stroke
/nop{}def
/xsp/base_charpath ld
/ysp{/cp_proc/y_proc ld base_charpath/cp_proc/x_proc ld}bd
/xysp{/cp_proc/xy_proc ld base_charpath/cp_proc/x_proc ld}bd
/xmp{/sop/nop ld /cp_proc/x_proc ld base_charpath/sop/stroke ld}bd
/ymp{/sop/nop ld /cp_proc/y_proc ld base_charpath/sop/stroke ld}bd
/xymp{/sop/nop ld /cp_proc/xy_proc ld base_charpath/sop/stroke ld}bd
/refnt{ % newname encoding fontname
findfont dup length dict copy dup
/Encoding 4 -1 roll put 
definefont pop
}bd
/renmfont{ % newname fontname
findfont dup length dict copy definefont pop
}bd

L3? dup dup{save exch}if

% languagelevel2 ONLY code goes here

/Range 0 def
/DataSource 0 def
/val 0 def
/nRange 0 def
/mulRange 0 def
/d0 0 def
/r0 0 def
/di 0 def
/ri 0 def
/a0 0 def
/a1 0 def
/r1 0 def
/r2 0 def
/dx 0 def
/Nsteps 0 def
/sh3tp 0 def
/ymax 0 def
/ymin 0 def
/xmax 0 def
/xmin 0 def

/setupFunEval % funDict -- 	% this calculates and sets up a function dict for evaulation.
{
    begin
	/nRange Range length 2 idiv store
	/mulRange   % precompute the range data needed to map a sample value from the table to a range value
		    % this data looks like [ range0mul range0min range1mul range1min ... rangeN-1mul rangeN-1min ]
	[ 
	    0 1 nRange 1 sub
	    { % index
		    2 mul/nDim2 xd		% 2*dimension# we are dealing with
		    Range nDim2 get		% ymin
		    Range nDim2 1 add get	% ymin ymax 
		    1 index sub			% ymin (ymax-ymin)
						% xmin = 0, xmax = 255 (2^bitspersample - 1)
		    255 div			% ymin (ymax-ymin)/(xmax - xmin)
		    exch			% (ymax-ymin)/(xmax - xmin) ymin
	    }for
	]store
    end
}bd

/FunEval % val1 fundict -> comp1 comp2 ... compN
{
    begin
	% the value passed in is the base index into the table
	nRange mul /val xd	% compute the actual index to the table
				% since there are nRange entries per base index
	0 1 nRange 1 sub
	{
	    dup 2 mul/nDim2 xd % dim
	    val	% base value to use to do our lookup
	    add DataSource exch get %  lookedupval
	    mulRange nDim2 get mul 	% lookedupval*(ymax-ymin)/(xmax-xmin)
	    mulRange nDim2 1 add get % lookedupval*(ymax-ymin)/(xmax-xmin) ymin
	    add % interpolated result
	}for	% comp1 comp2 ... compN
    end
}bd

/max % a b -> max(a, b)
{
	2 copy lt
	{exch pop}{pop}ifelse
}bd

/sh2
{	% emulation of shading type 2. Assumes shading dictionary is top dictionary on the dict stack
	/Coords load aload pop 	% x0 y0 x1 y1
	3 index 3 index translate	% origin is now at beginning point of shading
					% x0 y0 x1 y1
	3 -1 roll sub	% x0 x1 y1-y0
	3 1 roll exch 	% y1-y0 x1 x0
	sub				% y1-y0 x1-x0
	2 copy
	dup mul exch dup mul add sqrt	% length of segment between two points
	dup
	scale  
	atan	% atan (dy/dx)
	%dup (rotation angle = )print ==
	rotate		% now line between 0,0 and 1,0 is the line perpendicular to which the axial lines are drawn					
	
	/Function load setupFunEval	% may need to setup function dictionary by calling setupFunEval
	
	% this is now specific to axial shadings. Compute the maximum bounds to fill
	clippath {pathbbox}stopped {0 0 0 0}if newpath 	% x0 y0 x1 y1
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs
	currentdict/Extend known
	{
		/Extend load 0 get
		{	
			0/Function load FunEval sc	% evaluate the function to get a color and set it
			xmin ymin xmin abs ymax ymin sub rectfill
		}if
	}if
	% paint the rects. The sampling frequency is that of our table
	/Nsteps/Function load/Size get 0 get 1 sub store
	/dx 1 Nsteps div store
	gsave
		/di ymax ymin sub store
		/Function load
		% loop Nsteps + 1 times, incrementing the index by 1 each time
		0 1 Nsteps
		{
			1 index FunEval sc
			0 ymin dx di rectfill
			dx 0 translate
		}for
		pop	% pop our function
	grestore	% origin is back to start point
	currentdict/Extend known
	{
		/Extend load 1 get
		{	
			Nsteps/Function load FunEval sc	% last element
			1 ymin xmax 1 sub abs ymax ymin sub rectfill
		}if
	}if
}bd

/shp	% this paints our shape for shading type 3
{	% x1 r1 x0 r0 -
	4 copy

	% fill interior arc
	dup 0 gt{
		0 exch a1 a0 arc
	}{
		pop 0 moveto
	}ifelse

	dup 0 gt{
		0 exch a0 a1 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill

	% fill exterior arc
	dup 0 gt{
		0 exch a0 a1 arc
	}{
		pop 0 moveto
	}ifelse

	dup 0 gt{
		0 exch a1 a0 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill
}bd

/calcmaxs
{	% calculate maximum distance vector from origin to corner points
	% of bbox
	xmin dup mul ymin dup mul add sqrt		% (xmin2 + ymin2)
	xmax dup mul ymin dup mul add sqrt		% (xmax2 + ymin2)
	xmin dup mul ymax dup mul add sqrt		% (xmin2 + ymax2)
	xmax dup mul ymax dup mul add sqrt		% (xmax2 + ymax2)
	max max max								% maximum value
}bd

/sh3
{	% emulation of shading type 3. Assumes shading dictionary is top dictionary on the dict stack
	/Coords load aload pop 	% x0 y0 r1 x1 y1 r2
	5 index 5 index translate	% origin is now at first circle origin
	3 -1 roll 6 -1 roll sub		% y0 r1 y1 r2 dx
	3 -1 roll 5 -1 roll sub		% r1 r2 dx dy
	2 copy dup mul exch dup mul add sqrt
	/dx xs						% r1 r2 dx dy
	2 copy 0 ne exch 0 ne or
	{
		% r1 r2 dx dy
		exch atan rotate	% we are now rotated so dy is zero and positive values of dx move us as expected
	}{
		pop pop
	}ifelse
	% r1 r2		
	/r2 xs
	/r1 xs
	/Function load 
	dup/Size get 0 get 1 sub	% this is the size of our table minus 1
	/Nsteps xs		% at some point we should optimize this better so NSteps is based on needed steps for the device
	setupFunEval		% may need to setup function dictionary by calling setupFunEval
	% determine the case:
	% case 0: circle1 inside circle2
	% case 1: circle 2 inside circle 1
	% case 2: r1 = r2 
	% case 3: r1 != r2
	dx r2 add r1 lt{
		% circle 2 inside of circle 1
		0 
	}{
		dx r1 add r2 le
		{ % circle 1 inside of circle 2
			1
		}{ % circles don't contain each other
			r1 r2 eq
			{	% equal
				2
			}{ % r1 != r2
				3
			}ifelse		
		}ifelse
	}ifelse
	/sh3tp xs		% sh3tp has the number of our different cases
	clippath {pathbbox}stopped {0 0 0 0}if 
	newpath 	% x0 y0 x1 y1
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs

	% Arc angle atan( sqrt((dx*dx + dy*dy) - dr*dr), dr)
	dx dup mul r2 r1 sub dup mul sub dup 0 gt
	{
		sqrt r2 r1 sub atan
		/a0 exch 180 exch sub store 
		/a1 a0 neg store 
	}{
		pop
		/a0 0 store
		/a1 360 store		
	}ifelse		

	currentdict/Extend known
	{
		/Extend load 0 get r1 0 gt and	% no need to extend if the radius of the first end is 0
		{	
			0/Function load FunEval sc	% evaluate the function to get a color and set it
			% case 0: circle1 inside circle2
			% case 1: circle 2 inside circle 1
			% case 2: circles don't contain each other and r1 == r2
			% case 3: circles don't contain each other and r1 != r2
			{ 
				{	% case 0
					dx 0 r1 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		% for the bigger radius we fill everything except our circle
				}
				{	% case 1
					r1 0 gt{0 0 r1 0 360 arc fill}if
				}
				{	% case 2
					% r1 == r2, extend 0
					% r3 = r, x3 = -(abs(minx) + r), x1 = 0
				
					% x(i+1) r(i+1) x(i) r(i) shp
					0 r1 xmin abs r1 add neg r1 shp
				}
				{	% case 3
					% no containment, r1 != r2
				
					r2 r1 gt{	% the endpoint we are drawing is that with a circle of zero radius
						% x(i+1) r(i+1) x(i) r(i) shp
						0 r1
						r1 neg r2 r1 sub div dx mul	% this is point of beginning circle
						0	% point of ending circle
						shp	% takes x(i+1) r(i+1) x(i) r(i)
					}{	% the first circle is the bigger of the two
						% we find a circle on our line which is outside the bbox in the
						% negative direction
						% x(i+1) r(i+1) x(i) r(i) shp
						0 r1 calcmaxs	% 0 r1 maxs
						dup
						% calculating xs: (-(maxs+r2)*x2)/(x2-(r1-r2))
						r2 add dx mul dx r1 r2 sub sub div
						neg				% maxs xs'
						exch 1 index	% xs' maxs xs'
						abs exch sub
						shp
					}ifelse
				} 
			}sh3tp get exec	% execute the extend at beginning proc for our shading type
		}if
	}if

	% now do the shading
	/d0 0 store
	/r0 r1 store
	/di dx Nsteps div store
	/ri r2 r1 sub Nsteps div store 
	/Function load 
	0 1 Nsteps
	{	% function t(i)
		1 index FunEval sc
		d0 di add r0 ri add d0 r0 shp
		{
		% fill interior arc
		d0 0 r0 a1 a0 arc
		d0 di add 0 r0 ri add a0 a1 arcn
		fill
		
		% fill exterior arc
		d0 0 r0 a0 a1 arc
		d0 di add 0 r0 ri add a1 a0 arcn
		fill
		}pop
		
		% advance to next
		/d0 d0 di add store
		/r0 r0 ri add store
	}for
	pop	% pop our function dict

	% handle Extend
	currentdict/Extend known
	{
		/Extend load 1 get r2 0 gt and	% no need to extend if the radius of the last end is 0
		{	
			Nsteps/Function load FunEval sc	% last element
			% case 0: circle1 inside circle2
			% case 1: circle 2 inside circle 1
			% case 2: circles don't contain each other and r1 == r2
			% case 3: circles don't contain each other and r1 != r2
			{ 
				{
					dx 0 r2 0 360 arc fill
				} 
				{
					dx 0 r2 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		% for the bigger radius we fill everything except our circle
				} 
				{	% r1 == r2, extend 1
					% r3 = r, x3 = (abs(xmax) + r), x1 = dx
					% x(i+1) r(i+1) x(i) r(i) shp
					xmax abs r1 add r1 dx r1 shp
				}	
				{	% no containment, r1 != r2
			
					r2 r1 gt{
						% we find a circle on our line which is outside the bbox in the
						% positive direction
						% x(i+1) r(i+1) x(i) r(i) shp
						calcmaxs dup	% maxs maxs
						% calculating xs: ((maxs+r1)*x2)/(x2-(r2-r1))
						r1 add dx mul dx r2 r1 sub sub div	% maxs xs
						exch 1 index	% xs maxs xs
						exch sub
						dx r2
						shp
					}{	% the endpoint we are drawing is that with a circle of zero radius
						% x(i+1) r(i+1) x(i) r(i) shp
						r1 neg r2 r1 sub div dx mul	% this is point of ending circle
						0		% radius of ending circle
						dx 		% point of starting circle
						r2		% radius of starting circle
						shp
					}ifelse
				}
			}			
			sh3tp get exec	% execute the extend at end proc for our shading type
		}if
	}if
}bd
/sh		% emulation of shfill operator for type 2 and type 3 shadings based on type 0 functions
{	% shadingDict --
	begin
		/ShadingType load dup dup 2 eq exch 3 eq or
		{	% shadingtype
			gsave
				newpath
				/ColorSpace load scs
				currentdict/BBox known
				{
					/BBox load aload pop	% llx lly urx ury
					2 index sub				% llx lly urx ury-lly
					3 index					% llx lly urx ury-lly llx
					3 -1 roll exch sub 
					exch rectclip
				}if
				2 eq
				{sh2}{sh3}ifelse
			grestore
		}{
			% shadingtype
			pop 
			(DEBUG: shading type unimplemented\n)print flush
		}ifelse
	end
}bd

% end of language level 2 ONLY code

{restore}if not dup{save exch}if
% languagelevel3 ONLY code goes here
	L3?{	% we do these loads conditionally or else they will fail on a level 2 printer
		/sh/shfill ld
		/csq/clipsave ld
		/csQ/cliprestore ld
	}if
{restore}if

%currentdict dup maxlength exch length sub (number of extra slots in md = )print == flush	% *** how many entries are free
end
setpacking
% count 0 ne { pstack(***extras on stack during prolog execution***\n)print flush}if	% *** BARK if anything is left on stack
%%EndFile
%%EndProlog
%%BeginSetup
% Disable CTRL-D as an end-of-file marker...
userdict dup(\004)cvn{}put (\004\004)cvn{}put
[{
%%BeginFeature: *APOptionalDuplexer False
%%EndFeature
} stopped cleartomark
[{
%%BeginFeature: *Duplex None
1 dict dup /Duplex false put setpagedevice
%%EndFeature
} stopped cleartomark
[{
%%BeginFeature: *PageSize A4
2 dict dup /PageSize [595 842] put dup /ImagingBBox null put setpagedevice
%%EndFeature
} stopped cleartomark
% x y w h ESPrc - Clip to a rectangle.
userdict/ESPrc/rectclip where{pop/rectclip load}
{{newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
neg 0 rlineto closepath clip newpath}bind}ifelse put
% x y w h ESPrf - Fill a rectangle.
userdict/ESPrf/rectfill where{pop/rectfill load}
{{gsave newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
neg 0 rlineto closepath fill grestore}bind}ifelse put
% x y w h ESPrs - Stroke a rectangle.
userdict/ESPrs/rectstroke where{pop/rectstroke load}
{{gsave newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
neg 0 rlineto closepath stroke grestore}bind}ifelse put
userdict/ESPwl{}bind put
%%EndSetup
%%Page: 1 1
%%PageBoundingBox: 0 0 595 842
%%BeginPageSetup
%%EndPageSetup
cg_md begin
bp
sdmtx
%RBIBeginFontSubset: FEFNOV+Helvetica
%!FontType1-1.0: FEFNOV+Helvetica 1.0000.0.0000
14 dict begin
/FontName /FEFNOV+Helvetica def
/PaintType 0 def
/Encoding 256 array 0 1 255 {1 index exch/.notdef put} for
dup 33 /s put
dup 34 /u put
dup 35 /d put
dup 36 /o put
dup 37 /space put
dup 38 /m put
dup 39 /p put
dup 40 /r put
dup 41 /b put
dup 42 /e put
dup 43 /hyphen put
dup 44 /g put
dup 45 /underscore put
dup 46 /i put
dup 47 /n put
dup 48 /t put
dup 49 /f put
dup 50 /slash put
dup 51 /y put
dup 52 /k put
dup 53 /l put
dup 54 /c put
dup 55 /fi put
dup 56 /a put
dup 57 /h put
dup 58 /quotesingle put
dup 59 /zero put
dup 60 /x put
dup 61 /one put
dup 62 /six put
dup 63 /greater put
dup 64 /V put
dup 65 /four put
dup 66 /P put
dup 67 /D put
dup 68 /v put
dup 69 /two put
dup 70 /U put
dup 71 /S put
dup 72 /B put
dup 73 /nine put
dup 74 /quotedbl put
dup 75 /three put
dup 76 /five put
dup 77 /seven put
dup 78 /eight put
dup 79 /R put
dup 80 /G put
dup 81 /period put
dup 82 /M put
dup 83 /w put
dup 84 /A put
dup 85 /C put
readonly def
42/FontType resourcestatus{pop pop false}{true}ifelse
%APLsfntBegin
{currentfile 0(%APLsfntEnd\n)/SubFileDecode filter flushfile}if
/FontType 42 def
/FontMatrix matrix def
/FontBBox[2048 -1947 1 index div -985 2 index div 2961 3 index div 2297 5 -1 roll div]cvx def
/sfnts [<






88B900000001004B0000042F0580000F00534036050B1902380B3A0C390D4A0D550256046202B7070A7C0DB40DC50D030209010D0E3A000F04090C020D0800006F0E083809AC0E1147101076C418D4F4ED10E511123939003F3F3CFD3C391239015D31305D01150602070607060723121336372135042F45E558572D1D2EC744E88997FCE805809D43FEB4C0BB9A63DC019A0196EEADB50000030042FFD7041A059C000B0017003200CB4047560157095A0F5913640165096B0F691377250949107B197623722573277C317C32881987208727882E883198190D47083208250E0225320B3511112C05351E0517352C0D023821B80186B70E38296F2F08381BB80186B514382F3447331076C418D4EDF4ED10F5EDF4ED003FED3FED12392FED39390111123912393130437940352A2E1C201216030D162D1428000C2B0E28010A12082800061D082800041F022801152E1728000D2A172800071C0528010320052801002B2B2B2B012B2B2B2B2B81818181015D005D00363534262322061514163312363534262322061514163300272635343633321615140706071617161514022322243534363702A48680838274966688A5AA8581A3959CFEB52A4FE8D5CEEA44265059335FFEE8D1FEDF7C7A0340855C5086865A6572FD3B87868B90938270A302A02B5080A0E6D99186532F2D293564A0BDFEF9E3D87FB9310000020049FFD80411059A001B002700AB402E19052B0528164806580568058919881A981A09460807212727350A0A182135100504351BC7180D07023C071E3114B80155400B0D00291B8124380D2947281076C418D4EDF4ED10F5FD397D4B52787A2F18003FEDED3FED12392FED1112393130437940341F26191A0B13010312250226220F24280020111E28010319002800260B242800230E2128011F13212801011A042800250C2728002B2B2B2B012B2B2B2B2B2B81818181015D01161716333236130E012322023534123320131615100702212226350036353426232206151416330110086B374581B6263CB166CFF1EEE8013977424F83FEC7D2DA0232B19F7B849B8895015A95391ED701495F4D0102CBC30128FEE69BE9FEF9CBFEAEDCA601268DB09E9BB1948CA5000001001CFFED04AD04280006006C40425800580368038803040020120302030620120303040420120506050220120101000306040200030501050506010A03000106001A08010405030219070888215FB5182B2B4EF4173C10F63C1112393D003F3F111217392F044D8710182B10872B87102B87102B3130015D0901350901350104ADFB6F03BBFC45049101B6FE37B4016A0169B4FE36000002001E0000053D05BD0002000A0044B8005D2B00B801B64558B800032F1BB9000301C43E59B801B64558B800052F1BB9000501BE3E59B801B64558B800092F






4EF43C4DFDE44E10E6003F3F4D3FC4FDC411123939011112393130005D1333153E0133321617152E0123220615112389AB15A46B05181D101B108892B4042FB9369B0203BE0302AF72FD980000020042FFD703B6044B002E002F012E408F38099805961299149815982A062824252736214621472447275624572766246726790C790D790E7623742474257426A61EA82C1303000B15052D042E13001A151B171C18152D142E280F0B6908262536250225220D0A042B1318C61C1D1307041D2E9A2B0B2F07090E100207002F212F1A1F18161827173E28260727281A310E1F27103E00272E193031B221A65D182B2B4EF44DEDF4FD394E10F64DFD3910F4FD3911123939392F111239113939003F3FEDED3FEDED111217397131304379404C012D022615251A26210E1F21000926072101032C002100052A0721011D121F21001B14182101200F22210021220E0D08270A21012625090A012D04210006290421001E111C210119161C2101002B2B2B2B103C103C2B103C103C2B012B2B2B2B2B2B2B2B2B81005D5D015D13161716333236353427262F01262726353436333217160723262726232206151417161F011617161514062322262701EF082544A864983D27738F894174DBB9F26B4302AA05263E99666945284E77C24269D9DEEFC70701B701505A3057575B4524161D24222A498198BC8E5A683D32474E40462A19131D2F2C45948FD0D9A002F900010017FFEF0209055A00180052B50D2E0AC00E01B8013F40250416391703060E0A111A17171A0301062900150E150F031F030203FC1619191AFC21677D182B2B4EF44DFD5D39C42F3CFD3C104E456544E6002F3F3F3C4DFD3CED10FDE431301333113315231114171633323637150E012322263511233533A8B6ABAB2615310D1E141F43277E5A9191055AFED593FD4538130B01028E0908816702C593000000020080FFE303DE044900170018005E403AB814C81402091308141913191428067703D707070800050E0A00060D0A051D120B180718180B160D2E0A290C0B1A1A01291619191AD2216242182B2B4EF44DED4E10F63C4DFDE41112392F003F3FED3F3F3C391112393130005D015D0111141716333237363511331123370607062322272635112501381A3083BC4425B4AA0223346793E5532D01AF042FFD39523460A85A9D020EFBD19E3D2A5499528902D81A000001000B000003EA042F00060102402E4201C5010200670068026803670687048805A700A802084700480245044A0586048905C704C80508492873280708B80109B321677E182B2B4B5279B8FF70B40105042004B80183B703036D1202010205B80183401E06066D120000010506040301010502030603000605040A0817171A03AF02BA018400000184B301AF0619194EF4184DFDE0E0FD194E456544E61800

35331507331123B5233FB41124171C190B5220B2B4B295950213B4B4B4B40542345C0202A4020155AE8EFC64039C8EA81FCCCCC7FBD6000000010000000000006178CD6A5F0F3CF500110800000000005F4D8F0000000000DEE02ED6F865FC270B9108F9000000090001000000000000000100000629FE2900000C01F865FCED0B91000100000000000000000000000000000036051200420239000002D700520187009C02AA0055023900AF0239000004730040047300C4047300400473003104730034047300420473004D0473004B047300420473004904AC001C0556001E0556009705C7005A05C700A50639006306AA0097055600AF05C700B40556006005C700AA055600340473000004730052047300760400003B04730038047300480239001C0473003D0473008401C700840400008001C7008906AA0084047300840473003B0473007602AA00890400004202390017047300800400000B05C700120400000B040000150400001C000000360036005E0080009E00BE00E201500176020202AE02FC039004260470052205B80604064206C6075607B8086008EC094209CC0A980AE00B3E0B520C1C0C860D080D740E3E0E8A0F320F820FB01020104210BE111A11921204124A132A137A13D4146A1518154815DE16400000000100000036003D0003000000000002001000100067000007E80B9000000000B8005D2B01BA000501B9005F2B01BF01BB003E00340029001D0012000000652BBF01BC004200340029001D0012000000652BBF01BD003A00340029001D0012000000652B00BF01B7004D003D003700280012000000652BBF01B80060004F00370028001B000000652BBF01B90047003D0029001D0012000000652BBF01BA004200340029001D0012000000652B00BA01BE000400642BB801B620457D691844B800532BB800492BB8003F2BB800352BB8002B2B4118008001A6009001A600A001A600030069018B0079018B0089018B0099018B00040089018B0099018B00A9018B00B9018BB2040840BA0179001A014A400B041F5414191F180A0B1FD2B80106B49E1FD918E3BB0119000D00E10119B20D0009410A01A0019F0064001F01A50025017A00480028019AB3296C1F60410A01A9007001A9008001A90003008001A9000101A9B21E321FBE012C00250401001F0126001E0401B61FE7312D1FE531B80201B21FC227B80401B21FC11EB80201400F1FC01D9E1FBF1D671FBE1D671FAB27B80401B21FAA29B80401B61FA91D6C1F931EB8019AB21F921DB80101B21F911DB80101B21F751DB80201B61F6D29961F6431B8019AB21F4C96B802ABB21F391DB80156400B1F3638211F351DE41F2F27B80801400B1F2D1D4C1F2A31CD1F241DB802ABB21F201EB8012540111F1C1D931F3A1D4C1F1E1D45273A1D4527BB01AA019B00

00>] def
/CharStrings 54 dict dup begin
/.notdef 0 def
/space 1 def
/quotedbl 2 def
/quotesingle 3 def
/hyphen 4 def
/period 5 def
/slash 6 def
/zero 7 def
/one 8 def
/two 9 def
/three 10 def
/four 11 def
/five 12 def
/six 13 def
/seven 14 def
/eight 15 def
/nine 16 def
/greater 17 def
/A 18 def
/B 19 def
/C 20 def
/D 21 def
/G 22 def
/M 23 def
/P 24 def
/R 25 def
/S 26 def
/U 27 def
/V 28 def
/underscore 29 def
/a 30 def
/b 31 def
/c 32 def
/d 33 def
/e 34 def
/f 35 def
/g 36 def
/h 37 def
/i 38 def
/k 39 def
/l 40 def
/m 41 def
/n 42 def
/o 43 def
/p 44 def
/r 45 def
/s 46 def
/t 47 def
/u 48 def
/v 49 def
/w 50 def
/x 51 def
/y 52 def
/fi 53 def
 end readonly def
currentdict dup/FontName get exch definefont pop end
%APLsfntEnd
42/FontType resourcestatus{pop pop true}{false}ifelse
{currentfile 0(%APLT1End\n)/SubFileDecode filter flushfile}if
/FontType 1 def
/FontMatrix [ 0.00048828125 0 0 0.00048828125 0 0 ] readonly def
/FontBBox {-1947 -985 2961 2297} readonly def
/UniqueID 4052586 def
currentdict end
currentfile eexec
54544758EC884CF30C3CD503CEDBFF3839C47C3C3333173232E3FDBFF439491DB843E1924E63AA7726BBB0485AB56D93D8C0906F647A47162891E73FFC2A9873C4B1EAC5EEBDFFC4D06084FBD84139DF4583C6E259D10699944D1068C9C45667DCCCFB9B7EA01B606435EDCBD273ABAC093D14085CCBAC149BD7382E842CFE0D7FE4FD2EF589A2471F6074A80A8B675C2F7A50D63AC1EF90D787BADD11633CB01CF6EE3B37AAF9078A69AC4740E9B6525D78BBD839551A1CB80DB8682FA5E87591BBD6EE8B946063A2A58D9CA3685AB305495DC5FB5747EB8A9A059C4976C0FE4EEAB1D56FF47F1E9664ED9F4A7DAB763AF92B2F6CF2FA7DEC24710E0B9096E30F772BA7FEA9BDBE496C42ED2CEB58F54E80BDF57CE7B4DB6CCFE7182F43BF93CCA0767AF95D62C5D2C3DC6AE1E6D139F51A2C63432117F1714C5566572EE9967A715420ABDCD1D7BD74F8450B89965FCC81C6ACA565C5F3CCF91D430D1F953E4F1A645300A98DD8C47CD64555F08F422340A85404EAE0D3229C4F9336B9470CACBD6BBF3395104750A915CC6EAAC197668267B8C62D2764C8CD69FD937CA3C924D997A0EDE7964BEB9EA2F92EF70C5E5DA0AA55675454E59AEC12A68086DDD95476477C46AE143377694529C58844212FC811560E27EEE2CF00BCB286EEC6F4648804E1C3E324A8B97000F025BD612BE81602A0440FD7E511AF8B554E4F18DAEEFD91A1347ECFFA52AE413BAED6081A5DD84B2426B59E4D06FA758FC568A1DC5A331CA0E290B97206547109FFF478B19A081B8CC784843E587FCD95AE62C5151BFCE31DAC229DABCE6D22F59A50157F4FD475192495EE513CE3B8064E1DD98FB7010EEB4CB71B3C135F496F5A7C9D63EAF1446DEB8E22636E8E7A60F716E2EF5FD3E67ACB6934C3678E0E10735FD6E0E6EE779050663BEA8EAB99373914334298D1F54AD4D8B6CBE7E1C8EF630109C068B0E6B811E24D61FC3D46CDF8A14A0393B8F153CE6C4539138E1D4A661491CCBE59CE7B818F692DFB6ED28EC53063883AA67F630EC580F9FA4B5A30C719CD750FD742E37956700197ABFB7BEFF1FA0328A236BE044923DA51A29900553D44291342ED327E0687D55C4D41EA7F65BC4A7BC69F211E6858DB7094B50AC0A2BB29CC205BBE9FC0A21B64DE86439E496D9919EC5CFDEE1C2196A1225F776B567D4B17787D3A5732DBD268BAD40ACE5F6ABA6A1D2C1917EDE63283309C622A76C384DE64AF61D004E777A7FFCC1756655BBA6FF389DF09CE06E902BD28551A399AEFF2E233E11BCE4B313DF82E80BD27D5B36A34F6DD766C4CDEE333141FD950E969B9A007E5FD5F31CF6C2013937E893C82010F587A324831BD9EE6B168A5424C1F56390BBC8271A3ACD1FB83D5658BC0F98AC873CD29E3643EC92419941AD0DFD2153604109B1D33B032F1C67BCAC2F695
60E1E13CD14B2065AEAFFCD23250881638EFD09A77C3813459ECAC226D2E0A6C052E99BAA09D4EED078A9E4C93BC629CDE4041178BBF0E6DFDCE0BAB3B53873CE1C857AF60F2D3585D66EDF8C817B43428A1DD14E87DB979AA7E3B852FEE01BA7C6121E43FBBD1B99D641679FF3BA39407390860FC4AE8FF07E9FD31C35BF00AFF8C27867BAB0F8348F5F1491ACA9DF854A9EAB50BA5409150A5F1E77898DEAC1BAE5AB127F01E66867326E5E591CD46FFF8DC0DB906E3F29A4DF6A8E44CF7F75C04ADCC6CED53B89055C2F97B7EB9D6D507E507474156076719E0B812EF0450B742602544E6434860BD00CDC71CB182E9864A9F8B3FC045DB71D8D6B92FEEEAE32A4E5F07DCDDFF236895BE61A7C7638DFA2035D5FB732F84FDB8CF6E84839DA515E7917B6DBC7FBBF30387D4B1723E9A00E20AB226AC5F4022C49C8B5D506F0A62801AF4B74ED31697409BC808D616277EC8095415D55A3036C0D5A743B43B7CCA6F625B2A2B970EE7121A16346EE09A55BE9B0611511897ED48F72935A537430ABA4847B20902B0FE310346BB7894389B5E3A1E6F338539BF88A7DE0105FEFA44E107FF0728ABE01E2CC9DD5F59CD1261B5B2E6484D007A6BFA4AF22209AA0CB8CD8CF850690B28C1AE6ACCA00EF0C2FE8625DF9E621EB1381A59145A7336BB4232716CF8E664B5BB4C7C6395F6931017E947DA986B9E43A0316B6BBF3455B213063F85E048F934BCA4948F6F68D7C6E14EB3647C2DC2168F7A39E4DC78EEBDE6E5D80597A5E12A42EBAE2E43AC534B7797B84176CF5FE2160ED3126A1A7C686DC034D1E5C309815C5B54FFF0C2E358F781B871BB18834D6048378EBC39C340D09BC9BF1C8015A1ED6B4A8CD5451F9E9DAC83733B607D29DB33AF497736F7E58751EC621F020DF4009244584F44F6EEE573E9B233DE96366D16DCD97B203DFB57EFE172DD933AC5477D714BAAD3F3E880EF095139EDB3F0BE9720A5ED5F40168BC5E77323E318DB24C36C4EB57BA82C83586BE0254A22223B22ED053D97ABF8F21D724A67BF9ECD3AEBAE6639CA04CF51D1D5378C28030D29FE9EA253DE55AAADC70D7B4EE4EBE4DDB6D574CCDB7323C908140A832583F8188DCE33AB434321A69B5217A87582CDB5596532E77CC80519B95BF27ED572B605F58D7F183C7F2D79D20613D71E441A65CB143920EDDB670E6950572DED2A9574D9AA496AEB2BC0EA704ABBAD414593ECCA9BD0697AA5CDFA16A131A6B896860CAF3A339A54A890D88017E5DBD3206885A580AE41113CCF22C02238EA6828FC55FED20976CEB0FDAE3472EEDB0840C4235DB7E2FE834D26B7F0213474EFC9BFD741060842706A3C00D2820C102AFE6EA7B2B600A303FCF89F0FDE6BDF7E2CB29D6DD32E872C9ED3F3218439CE9B25CD0C86A2A8388EEE343E6E17AC7BA906882A3F8116D67BA2

0BFE8B4A7BD48F4795464983E518DB9D3508418AC87AAD4262F88114E45FC5E445063F03F76EDA8BE7D04F360710B54C633A47E82C4AB782D13A1DC9B5808F4B9913ED43036503FD69F5AFAF075A1F7C715D9F1637ABA71BD0592050E38A1F5B42FA5AF2F53EEE853F158495D42219C38B79CDA26520FE3401D35CD015DFDB05926873C025645DBE0A98F6694EBAD485482B5DA580F50592A2040A83437BAA392C02F9789A68D6065AB57C9733F5A41CBD4E7BACD5241B443E79203106195208DE855F180515BFFA328FE248693CD9D6EC082EEB10CEAC833B3AC109AC108829EA77AEE82280C759C0981F4B65B0A02F15F73E8D20F4C0EF9A1CFC2462464E7CF493B287C90328AF61CA06D6C9007ECA402B9E515E17D856EC6C5F0671EF5D5C6AC97A5F7D98B0D96500B36334C72B7FBCD0C17920A087B63347A4FEAA9C8F4F50B1C05291EF30B4B1F7C51D10A8A8832A608A98D588A362858A8F4F58FBEE637FA4FDCAAABA30952C6F113277F25A7222E183182BDD4FEEC688319AE8E4F92ABF25301DAA42BFB319FFA4A2B88596C5CB7BCB7F491BB9152E6D46E0D0CD38E7F49C3CEFCC90408FC8FC6479AFBB78792BDE54B3378C4DAF8789F90C255A3DA58684346D3828630A9ED3C3E3C668AE85B6C2B6FCABD5232ECD040579A9B9B5919D524A9CA038EC747FA8618BC2C8783D12CEA68E9DD266B84CFD52E05C975A15E235E2E30D13CBF0C4D43DC5C566D5AC99FD9A59DAD5F2B3EA858C02ACA46D200F98E5186862E926507DCAD5004D43308F3EAFD30C045B1A93ECB31F90C4D80BF33935C813509A3442CF995BDD75691649CF0530D55E57BDC124EF1D389C00D64723AC85988E6F57623EF6331D2A0D7181794744863A09E4C7994919B80B47DF0BE12215C079BAF5E56099CDEF42E4EBF7F23C428F07386490A8CDE7C41B823B394FD525B36BF4BFB6F06BCED1A61090F1B3614290739DDFB4037A4AC2516BD65B999E3C7B63EF58E04EB34183EBABD0A9CB23DB23B16A4DA17CBB67405582D7B854624EC6489577631E4B5479F57A28B3BCA364DD9AC97D0755A9AE0632CE0C13A9D55A293073447CADB617D808D9A7E2ED856E92D39A7BA8C03ECD369E1A374F82A70E23B330ECEBE05F67632DB5E782B8E6E9AB730C43A6E199884956C490A79CBFD5AB5C200D33D9FE615EBDA44B8A389D0F5D0DF21780ADE2DD5E9ADB7683AE0603ED25621D78606F8F450DF47C894DFC46A6AA1C3285CD3F1188B215D2A5C83CEF0E5C897892BDF5955D428815109B6FEFD2DE6BC1A88D3A02E793D92E5E0724023D4C678A81598287A36E77A87BD95DCA24E5F92BF204E43463298B91B4EE5F866706F7852CB05A4FD5DADB9DD1645DAFBE1C675410A7C5941AB061216D5CCA94D5F1006DBFD9BE2A81BA4AB3E3F321FC1846CB2A102E3BF5FC32F2A9
A308F273B91B6E6EC8B40A760911238A0B87711F55574F422D91FE3ADBA1E866F6EC1581D1D762AEB63D2BF4EE182886869BB0FD41D4125AF73800E0281BD2DB9CEA2FB0E4964BB39EB3A80A75CBB8ED08790A05B0C017CFA40DC09A094791584AEC94E66D733E902A1A2076136DCEBC262F2BC2ED209A59D6049D72DD4ADCB72140F0EED98A349AA7ADCE0437DA1779D91654F03663B4D9911BF07A504EE70D2334D0868AB873173FDE7BFAAA50F046C8F831A3644FA92294E21F299378A36A2971951AE3BBD126307663EC38D489FF22E265717729E836154B6EFEFB94D13593CD84C32F1B99597CC62B92DDB3BC4F6D8EAF9762AFF223C30DE6182C110CEDB4E35423D34DA11FF6CE63FE2C816D5EC650857630E1F681267D48CFCA5DD86E4348E9EE53C1CC29006DA04BBE681E68EBA91893316A1A6ACBDAD9043B16DB49A622AF520794469C3419270F210A2E40D167F1AF458C14B5AAC93231BCAB6A0EF07DA62BD0F88EE471DAFB9AA7AB83D4793E1F614B1578FD39EDEAC5DBE06DB611F4FCB5A71258CDD78E52FCE5E76C015AEB46A18BB633DDB794E40117D8DA723D59812531BB4C27D99A9D7F605011579F107F64AD21724C6239D52A18D8C53E837B9936D61601CBB95B53338BD97405ACC6FC7FFB767EE09F58F185CD8CC776FBA7942F9DFA8FC543F3B178C1550BB14D39C090B261DA4B1EF76A191475C16AAD07506B81FC179408B838162A1C6C923A38874F6706CA0A5D924E37AA4F9D34D3DA12ECA8EFCD593F7026609E94E5A700DE6D6F7E85D3CFF9DFB794B3A552ADDFB254D1303FCC740AF952EA0DF41A5C8A85DC3FF8F2F2AC059D48009D75DDC5F8A389C68AA0889892574CA2E4A7028708577D85D5F876AD159069A8EB4C52EC3370F8CD3AFE25FFFE1CE4A944F9AE884B81D5DC8F4A73D3715D321FAA3CD0B1959D4C9D6C01F76BADCCBA456F02FD0E5E72BB8F35CF82CAEB2BA61F3007155C555672C7F33F1F50776E0EDC9AF717DFA143AD0FFD117E91DBE0E0D8F4B2AE4DFE97F3FDD808B88D4D4012717F8A3B411B5970900F9E0A85BD0CFE852DE1813A746F036844529AB775EE768292936BF6A5F2DB74DB7874AC8DBD9D987D47B60B9875D0861F1E26A66D9310A57256E17EC0C489517A7E4576CF6A3F92E1E0E3B6FA72D022B630CAAB79F05ADF40D569034808184C1AB46D242A06FB639269D45A8BA157C69877AB3732F5960A03D3723D2DC597CEF7A767230FD4890DBF7147757B5F8A86221B1B9D92ED87FCBD6C202EC5C91A6490D9E7819AC9E05D7B24926911E577C3D2C8456905EF6E4E3671A0A25C6038B1393488179946ACDADE8A334DB36ED282D4BA502894E8F705262523F7595B7B24C8FCD330BF30CF8DADCB9FF3E246C35EDCF2C52CE8322E15D7D6A5B392BB08E364B697378EB0729FF73E917D
449803F3EE573FDEF84F08E4632D9C801A35274BB759034A125542AF8C7E9ADE253A1B15443E4EE15AB4031634E8A25A4129FF110930FFE26AA8F5C7D52D09164D38E008E67FE0047A0BE345983B57B509964720F0EABF725C6E5566288F94C939D176D084C99416717F1657AB3A3855248589B6AC65E6C9C4ACBAB12CC1413CF451065C4700A6CF2A1E494C3D6AC34AA9954983CC1C2166BA67925502AB7808C25D0BE069C24F238D0C2F4767E9A16A68FE2DD1E5E133613F88036EC5A8709AB69F723A39C3D88DDDF9DFA625AF800A7332F5B0F541CED7EE92B002CDBC2055183478D9C9104970BC380C1B9C3B7041DEF3CC5DA18E093411628A18B642F753983FAF808447F7F7579D6DDA7D2CFF5CDAD43B84079C9B8AD9B3BBDEF68F2712B19A3FC76B683EC7721F6F2AAB9DDF29CCD837AEB0854C8C7C6E0C095D37E573EFA2AA6A6306D1E12DE89882D78AF76E4A4A25F19A5338C802973CB645E6FEC1BDC142FDD1AC7A2E0C40BB503390BCA304C7B56BACBCB95E4A736D7A3F85A9FF3A677F511923BB811659096C65139059D96124F2B5877AE4A13BEE82BD10BB57389CEE20C0C9D8CDA71695704E56072E703D324C160D98815977DEB070C504228CA54D1D6D2594989F0ECB7DDE42E800C4CBEDEA9EA6E615709BBCE8056F9EC4C5A23946A57102D839C986CA263D5C8A795BECDFDC629799A4F2EBF73F4545253B92B5D15854980FED42EB466A7B2039C623BECE423E14C04E410D0E6A283BC8023D3F2A585F959221D9B75223512FD30CB73D0E9D7980347C5CE54BD746A69C83D835D17DE16B67A8FC910835345A8198AF32C123F7D04F2883E43753C84E95A56CF5AB054D3C51B8B052E6D1383EA3B940A67AD5B1F15E612B218B68E3A46CF5B764AEA788CBF7B1EFB8F0C28764473A0506147A22F753777E42D9C2B8E1FEB56AD58C364253D99C612EF0070BACA6CBB07933B080680D39A0CFA02A3D1AACB919A09858904CF7B73D6A41A089A0ABE36F253A50CA71A5F9244B7EFED4D05203C14CA858E845984E088DA6DD1BA5178503689C97AEDFF4C262F5EF4A7AD7FCBC426FA02C8487F9F40518BD6D587B77BCCCFC61330B300F4B43FDEF442A4C40C417AF0A52C4AA997BB7086BF6D625D3994B692099913AD0B6820CC4D7530F28BA99287C41C50532AE898E58FB0C85DA68925BC8801306A0FC938134249E1A0995E8C23D12403C8AE83A047028BADFEA95F6B3E54F3A135EBC8A405BCF721AEDE8AAFF9B84C880D6C8591EDCB6C9B5A240B866F252AC3F17E304707BCC07E69B8F9F366CD0B7497D410FC6A6547334E8935E520810CF04318597BC5922653B5ABC5E9E96B64E489701F3F1A24C7781DF5EEF8F6873E26ABDEC3D02F8A5D989E07A71F8BF55AA20BC7BB997C432CCB2FEF4487B8A7A5F3FDAB2E041FF2F8C0B1C

A58640963082B1991F8E4C688427591A9DFD7593A2865CDF8823CB11153ADB2434F3B4BC595FCF5F6FE480F8C73AC06A33F4DDA67DF806C969D9A47F3B420DAC388D189213F4905549828DB2E6B5FD0F2302228923B432F280D6BDAAEAC4888BDACC6B3A459D22247F9184E26FF40296A92719D23DBEFDE713CED311CA76728B07D4DAE18438336C0224EC747CE803690E1F44008989EC8A697610C982573BBA722CCCFC04CA82E58036EC708E022F37EB08409B6FE8CB7637E3CC0496B8F4114C29DC25AA416ADBCF8127905F7920DC57380268CDD2CF4B5E02264CF175F99FBBE33823FE731C4074A26A1720430E65BD9629B951DB98AE65286EA23BAFB235D9294B31E2088C0A4B849E556CFC5A426F43C1FED2EC404B8BE2CEF847AD5697DD2788D1A0ED627DB720D9028DBF4706B35548EB234E845BC1014B3FA2355F6988A1EE077854C74B2704B8AAE0D3A8F601F41C997DAA78CF49D62C764C014C4F1830FA10453E8DC4D2161C3A4782DCF736BC0E06F9AC3A10F72DDE53C59E34F75C6841783CDF52DB3E808A0AAAF30FA785EE074CF99EDFFD48CE786103DDA0982CE3B1233626C96B0C0CA74D7067F147333AD6821CD868B1C7B697D5B54FF12A0433A74712C6ECB48D8C11F44D22CBC46A4EB3128CD2344EA64550F925440626BC0A29C69AA3F708F2832762C3090F8420DA34D7F044DD12FCD1D83C649B390646235614EAF53F0D55858E9EA87C70109320450FA2979A81D2B270031307E4D3F52BCACE9D01CE9AD6BEC5C3357E476CB94FD52035E0B70324DDCF01D324958692049EC94672E52ED4C572A554772B7A0B310334D66BE6DC6491DFAC734B4F31A8B82A34612413047E98FD
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%APLT1End
%RBIEndFontSubset
/FEFNOV+Helvetica cguidfix
/F1.1/FEFNOV+Helvetica renmfont
[ /CIEBasedABC 4 dict dup begin 
/WhitePoint [ 0.9505 1.0000 1.0891 ] def 
/DecodeABC [ 
{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 

{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 

{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 
] def 
/MatrixABC [ 0.4124 0.2126 0.0193 0.3576 0.7151 0.1192 0.1805 0.0722 0.9508 ] def 
/RangeLMN [ 0.0 0.9505 0.0 1.0000 0.0 1.0891 ] def 
end ] /Cs1 exch/ColorSpace dr pop
%%EndPageSetup
/Cs1 SC
0 0 0 sc
q
72 753.36877 160.4425 16.631241 rc
0.97830802 0 0 -0.97830802 76.891541 770 cm
/F1.1[ 12 0 0 -12 0 0]sf
0 11 m
(!"#$%&$#'\($\)*%+\(%,-'\(./0*\()[ 6.000000 6.674400 6.674400 6.674400 3.333600 9.996000 6.674400 6.674400 6.674400 3.996000 6.674400 6.674400 6.674400 3.333600 3.996000 3.996000 3.333600 6.674400 6.674400 6.674400 3.996000 2.666400 6.674400 3.333600 6.674400 0.000000 ] xS
Q
q
72 739.67249 313.05859 19.56616 rc
0.97830802 0 0 -0.97830802 76.891541 756.30371 cm
/F1.1[ 12 0 0 -12 0 0]sf
0 11 m
(!"#$%\(&%+\(1%2!3!24*\(/*526$/7,2"!\)-,8#,*02'\(./0*\(-,8#,*0)[ 6.000000 6.674400 6.674400 6.674400 3.333600 3.996000 9.996000 3.333600 3.996000 3.996000 3.333600 3.333600 3.333600 6.000000 6.000000 6.000000 3.333600 6.000000 6.674400 3.996000 6.674400 6.674400 2.666400 3.333600 6.000000 6.674400 6.674400 6.000000 6.674400 3.333600 6.674400 6.000000 6.674400 6.674400 6.674400 6.674400 6.674400 6.674400 6.674400 3.333600 3.333600 6.674400 3.996000 2.666400 6.674400 3.333600 6.674400 3.996000 6.674400 6.674400 6.674400 6.674400 6.674400 6.674400 0.000000 ] xS
Q
q
72 725.97607 166.31239 19.56616 rc
0.97830802 0 0 -0.97830802 76.891541 742.60742 cm
/F1.1[ 12 0 0 -12 0 0]sf
0 11 m
(!"#$%&$#'\($\)*%5.\)6$&'$!.0*)[ 6.000000 6.674400 6.674400 6.674400 3.333600 9.996000 6.674400 6.674400 6.674400 3.996000 6.674400 6.674400 6.674400 3.333600 2.666400 2.666400 6.674400 6.000000 6.674400 9.996000 6.674400 6.674400 6.000000 2.666400 3.333600 0.000000 ] xS
Q
q
72 712.27979 189.79179 19.56616 rc
0.97830802 0 0 -0.97830802 76.891541 728.91107 cm
/F1.1[ 12 0 0 -12 0 0]sf
0 11 m
(6#%2!3!24*\(/*526$/7,2"!\)-,8#,*0)[ 6.000000 6.674400 3.333600 3.333600 6.000000 6.000000 6.000000 3.333600 6.000000 6.674400 3.996000 6.674400 6.674400 2.666400 3.333600 6.000000 6.674400 6.674400 6.000000 6.674400 3.333600 6.674400 6.000000 6.674400 6.674400 6.674400 6.674400 6.674400 6.674400 6.674400 0.000000 ] xS
Q
q
72 698.5835 155.55099 19.56616 rc
0.97830802 0 0 -0.97830802 76.891541 715.21478 cm
/F1.1[ 12 0 0 -12 0 0]sf
0 11 m
(!"#$%&4#.\(%'\(./0*\(-,8#,*0)[ 6.000000 6.674400 6.674400 6.674400 3.333600 9.996000 6.000000 6.674400 2.666400 3.996000 3.333600 6.674400 3.996000 2.666400 6.674400 3.333600 6.674400 3.996000 6.674400 6.674400 6.674400 6.674400 6.674400 6.674400 0.000000 ] xS
Q
q
72 684.88721 110.5488 19.56616 rc
0.97830802 0 0 -0.97830802 76.891541 701.51837 cm
/F1.1[ 12 0 0 -12 0 0]sf
0 11 m
(6#%'\(./0*\(-,8#,*0)[ 6.000000 6.674400 3.333600 6.674400 3.996000 2.666400 6.674400 3.333600 6.674400 3.996000 6.674400 6.674400 6.674400 6.674400 6.674400 6.674400 0.000000 ] xS
Q
q
72 671.19092 209.35789 19.56616 rc
0.97830802 0 0 -0.97830802 76.891541 687.82208 cm
/F1.1[ 12 0 0 -12 0 0]sf
0 11 m
(!"#$%!9%+6%:*69$%;<=#>\)%?%.#@*/#$\(:)[ 6.000000 6.674400 6.674400 6.674400 3.333600 6.000000 6.674400 3.333600 3.996000 6.000000 3.333600 2.290800 6.674400 6.000000 6.674400 6.674400 3.333600 6.674400 6.000000 6.674400 6.674400 6.674400 6.674400 3.333600 7.008000 3.333600 2.666400 6.674400 7.347600 6.674400 6.674400 6.674400 6.674400 3.996000 0.000000 ] xS
Q
q
72 657.49463 212.2928 19.56616 rc
0.97830802 0 0 -0.97830802 76.891541 674.12579 cm
/F1.1[ 12 0 0 -12 0 0]sf
0 11 m
(!"#$%!9%+6%:*69$%;<;=;A%?%.#B\($#"60:)[ 6.000000 6.674400 6.674400 6.674400 3.333600 6.000000 6.674400 3.333600 3.996000 6.000000 3.333600 2.290800 6.674400 6.000000 6.674400 6.674400 3.333600 6.674400 6.000000 6.674400 6.674400 6.674400 6.674400 3.333600 7.008000 3.333600 2.666400 6.674400 8.004000 3.996000 6.674400 6.674400 6.674400 6.000000 3.333600 0.000000 ] xS
Q
q
72 643.79828 217.1844 19.56616 rc
0.97830802 0 0 -0.97830802 76.891541 660.4295 cm
/F1.1[ 12 0 0 -12 0 0]sf
0 11 m
(!"#$%!9%+6%:*69$%;<;=;;%?%\)6#C*D.6*:)[ 6.000000 6.674400 6.674400 6.674400 3.333600 6.000000 6.674400 3.333600 3.996000 6.000000 3.333600 2.290800 6.674400 6.000000 6.674400 6.674400 3.333600 6.674400 6.000000 6.674400 6.674400 6.674400 6.674400 3.333600 7.008000 3.333600 6.674400 6.000000 6.674400 8.666400 6.674400 6.000000 2.666400 6.000000 6.674400 0.000000 ] xS
Q
q
72 630.10199 205.4447 19.56616 rc
0.97830802 0 0 -0.97830802 76.891541 646.73322 cm
/F1.1[ 12 0 0 -12 0 0]sf
0 11 m
(!"#$%!9%+6%:*69$%;<;E;;%?%\)6#FGH:)[ 6.000000 6.674400 6.674400 6.674400 3.333600 6.000000 6.674400 3.333600 3.996000 6.000000 3.333600 2.290800 6.674400 6.000000 6.674400 6.674400 3.333600 6.674400 6.000000 6.674400 6.674400 6.674400 6.674400 3.333600 7.008000 3.333600 6.674400 6.000000 6.674400 8.666400 8.004000 8.004000 0.000000 ] xS
Q
q
72 602.70929 160.4425 19.56616 rc
0.97830802 0 0 -0.97830802 76.891541 619.34058 cm
/F1.1[ 12 0 0 -12 0 0]sf
0 11 m
(!"#$%&4#.\(%+'%!0\(./,!2;<A;I)[ 6.000000 6.674400 6.674400 6.674400 3.333600 9.996000 6.000000 6.674400 2.666400 3.996000 3.333600 3.996000 6.674400 3.333600 6.000000 3.333600 3.996000 2.666400 6.674400 6.674400 6.000000 3.333600 6.674400 6.000000 6.674400 6.674400 0.000000 ] xS
Q
q
72 589.013 338.4946 19.56616 rc
0.97830802 0 0 -0.97830802 76.891541 605.64429 cm
/F1.1[ 12 0 0 -12 0 0]sf
0 11 m
(!"#$%!9%+6%:*69$%J;=EKAL>MNIJ%?%!0\(./,!2;<A;I2!*\(.85/"&\)*\(:)[ 6.000000 6.674400 6.674400 6.674400 3.333600 6.000000 6.674400 3.333600 3.996000 6.000000 3.333600 2.290800 6.674400 6.000000 6.674400 6.674400 3.333600 4.260000 6.674400 6.674400 6.674400 6.674400 6.674400 6.674400 6.674400 6.674400 6.674400 6.674400 4.260000 3.333600 7.008000 3.333600 6.000000 3.333600 3.996000 2.666400 6.674400 6.674400 6.000000 3.333600 6.674400 6.000000 6.674400 6.674400 6.674400 3.333600 6.000000 6.674400 3.996000 2.666400 6.674400 2.666400 6.674400 6.674400 9.996000 6.674400 6.674400 3.996000 0.000000 ] xS
Q
q
72 575.31671 342.40781 19.56616 rc
0.97830802 0 0 -0.97830802 76.891541 591.94788 cm
/F1.1[ 12 0 0 -12 0 0]sf
0 11 m
(!"#$%!9%+6%:*69$%JO8!'\)*\(\(3%B.J%?%!0\(./,!2;<A;I2&8/"1860"\(*\(:)[ 6.000000 6.674400 6.674400 6.674400 3.333600 6.000000 6.674400 3.333600 3.996000 6.000000 3.333600 2.290800 6.674400 6.000000 6.674400 6.674400 3.333600 4.260000 8.666400 6.674400 6.000000 6.674400 6.674400 6.674400 3.996000 3.996000 6.000000 3.333600 8.004000 2.666400 4.260000 3.333600 7.008000 3.333600 6.000000 3.333600 3.996000 2.666400 6.674400 6.674400 6.000000 3.333600 6.674400 6.000000 6.674400 6.674400 6.674400 3.333600 9.996000 6.674400 6.674400 6.674400 3.333600 6.674400 6.000000 3.333600 6.674400 3.996000 6.674400 3.996000 0.000000 ] xS
Q
q
72 561.62042 348.27771 19.56616 rc
0.97830802 0 0 -0.97830802 76.891541 578.25159 cm
/F1.1[ 12 0 0 -12 0 0]sf
0 11 m
(!"#$%!9%+6%:*69$%JFGH%B\(./0*\(%P8#,*0J%?%!0\(./,!2;<A;I2'\($#"60:)[ 6.000000 6.674400 6.674400 6.674400 3.333600 6.000000 6.674400 3.333600 3.996000 6.000000 3.333600 2.290800 6.674400 6.000000 6.674400 6.674400 3.333600 4.260000 8.666400 8.004000 8.004000 3.333600 8.004000 3.996000 2.666400 6.674400 3.333600 6.674400 3.996000 3.333600 9.333600 6.674400 6.674400 6.674400 6.674400 3.333600 4.260000 3.333600 7.008000 3.333600 6.000000 3.333600 3.996000 2.666400 6.674400 6.674400 6.000000 3.333600 6.674400 6.000000 6.674400 6.674400 6.674400 3.333600 6.674400 3.996000 6.674400 6.674400 6.674400 6.000000 3.333600 0.000000 ] xS
Q
q
72 534.22778 146.7462 19.56616 rc
0.97830802 0 0 -0.97830802 76.891541 550.85901 cm
/F1.1[ 12 0 0 -12 0 0]sf
0 11 m
(!"#$%&4#.\(%+'%6$/7,!26Q=)[ 6.000000 6.674400 6.674400 6.674400 3.333600 9.996000 6.000000 6.674400 2.666400 3.996000 3.333600 3.996000 6.674400 3.333600 6.000000 6.674400 6.674400 6.000000 6.674400 6.000000 3.333600 6.000000 3.333600 0.000000 ] xS
Q
q
72 520.53149 258.27328 19.56616 rc
0.97830802 0 0 -0.97830802 76.891541 537.16272 cm
/F1.1[ 12 0 0 -12 0 0]sf
0 11 m
(!"#$%!9%+6%:*69$%=E;%?%6$/7,!26Q=2R8<B$S*\(:)[ 6.000000 6.674400 6.674400 6.674400 3.333600 6.000000 6.674400 3.333600 3.996000 6.000000 3.333600 2.290800 6.674400 6.000000 6.674400 6.674400 3.333600 6.674400 6.674400 6.674400 3.333600 7.008000 3.333600 6.000000 6.674400 6.674400 6.000000 6.674400 6.000000 3.333600 6.000000 3.333600 6.674400 3.333600 9.996000 6.674400 6.000000 8.004000 6.674400 8.666400 6.674400 3.996000 0.000000 ] xS
Q
q
72 506.83511 274.9046 19.56616 rc
0.97830802 0 0 -0.97830802 76.891541 523.46637 cm
/F1.1[ 12 0 0 -12 0 0]sf
0 11 m
(!"#$%!9%+6%:*69$%;<N;%?%6$/7,!26Q=2\)&T00\(.\)"0*!:)[ 6.000000 6.674400 6.674400 6.674400 3.333600 6.000000 6.674400 3.333600 3.996000 6.000000 3.333600 2.290800 6.674400 6.000000 6.674400 6.674400 3.333600 6.674400 6.000000 6.674400 6.674400 3.333600 7.008000 3.333600 6.000000 6.674400 6.674400 6.000000 6.674400 6.000000 3.333600 6.000000 3.333600 6.674400 3.333600 6.674400 9.996000 8.004000 3.333600 3.333600 3.996000 2.666400 6.674400 6.674400 3.333600 6.674400 6.000000 0.000000 ] xS
Q
q
72 493.13879 219.14101 19.56616 rc
0.97830802 0 0 -0.97830802 76.891541 509.77011 cm
/F1.1[ 12 0 0 -12 0 0]sf
0 11 m
(!"#$%&4#.\(%+'%6$/7,!26Q=2!0\(./,!2;<A;I)[ 6.000000 6.674400 6.674400 6.674400 3.333600 9.996000 6.000000 6.674400 2.666400 3.996000 3.333600 3.996000 6.674400 3.333600 6.000000 6.674400 6.674400 6.000000 6.674400 6.000000 3.333600 6.000000 3.333600 6.674400 3.333600 6.000000 3.333600 3.996000 2.666400 6.674400 6.674400 6.000000 3.333600 6.674400 6.000000 6.674400 6.674400 0.000000 ] xS
Q
q
72 479.4425 404.0412 19.56616 rc
0.97830802 0 0 -0.97830802 76.891541 496.07379 cm
/F1.1[ 12 0 0 -12 0 0]sf
0 11 m
(!"#$%!9%+6%:*69$%JB\(./0*\(%U$/7,J%?%6$/7,!26Q=2!0\(./,!2;<A;I26$/7,"\(80.$/:)[ 6.000000 6.674400 6.674400 6.674400 3.333600 6.000000 6.674400 3.333600 3.996000 6.000000 3.333600 2.290800 6.674400 6.000000 6.674400 6.674400 3.333600 4.260000 8.004000 3.996000 2.666400 6.674400 3.333600 6.674400 3.996000 3.333600 8.666400 6.674400 6.674400 6.000000 6.674400 4.260000 3.333600 7.008000 3.333600 6.000000 6.674400 6.674400 6.000000 6.674400 6.000000 3.333600 6.000000 3.333600 6.674400 3.333600 6.000000 3.333600 3.996000 2.666400 6.674400 6.674400 6.000000 3.333600 6.674400 6.000000 6.674400 6.674400 6.674400 3.333600 6.000000 6.674400 6.674400 6.000000 6.674400 6.674400 3.996000 6.674400 3.333600 2.666400 6.674400 6.674400 0.000000 ] xS
Q
q
72 452.0499 201.53149 19.56616 rc
0.97830802 0 0 -0.97830802 76.891541 468.68109 cm
/F1.1[ 12 0 0 -12 0 0]sf
0 11 m
(!"#$%&4#.\(%+'%1"/60.$/!2'\(./0*\(Q"!\);)[ 6.000000 6.674400 6.674400 6.674400 3.333600 9.996000 6.000000 6.674400 2.666400 3.996000 3.333600 3.996000 6.674400 3.333600 3.333600 6.674400 6.674400 6.000000 3.333600 2.666400 6.674400 6.674400 6.000000 3.333600 6.674400 3.996000 2.666400 6.674400 3.333600 6.674400 3.339600 3.333600 6.674400 6.000000 6.674400 0.000000 ] xS
Q
q
72 438.35361 247.5119 19.56616 rc
0.97830802 0 0 -0.97830802 76.891541 454.9848 cm
/F1.1[ 12 0 0 -12 0 0]sf
0 11 m
(!"#$%5/%+!%1"/60.$/!2'\(./0*\(Q"!\);%6$/7,!26Q=2)[ 6.000000 6.674400 6.674400 6.674400 3.333600 2.666400 6.674400 3.333600 3.996000 6.000000 3.333600 3.333600 6.674400 6.674400 6.000000 3.333600 2.666400 6.674400 6.674400 6.000000 3.333600 6.674400 3.996000 2.666400 6.674400 3.333600 6.674400 3.339600 3.333600 6.674400 6.000000 6.674400 6.674400 3.333600 6.000000 6.674400 6.674400 6.000000 6.674400 6.000000 3.333600 6.000000 3.333600 6.674400 0.000000 ] xS
Q
q
72 427.59219 221.0976 16.631241 rc
0.97830802 0 0 -0.97830802 76.891541 441.28851 cm
/F1.1[ 12 0 0 -12 0 0]sf
0 11 m
(!"#$%!9%+6%:*69$%1*IN;;;;Q"!\)%?%FCU:)[ 6.000000 6.674400 6.674400 6.674400 3.333600 6.000000 6.674400 3.333600 3.9